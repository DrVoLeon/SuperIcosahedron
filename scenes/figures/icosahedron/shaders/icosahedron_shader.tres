[gd_resource type="VisualShader" load_steps=20 format=3 uid="uid://b555t84rxkthb"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_bxglj"]
size = Vector2(680, 400)
expression = "wrld_vertex = MODEL_MATRIX * vec4(VERTEX, 1.0);"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_87a1n"]
default_input_values = [0, 0.2, 1, 0.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_8kc18"]
default_input_values = [0, 0.8, 1, 0.0]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_2ggu8"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_j5dqo"]
constant = 1.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2f48n"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_638oe"]
function = 0

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_uip7v"]
default_input_values = [0, 0.0, 1, 0.5, 2, 0.0]

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_ntnau"]
output_port_for_preview = 0
expanded_output_ports = [0]
operator = 1

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_1eas0"]
output_port_for_preview = 0
expanded_output_ports = [0]
parameter_name = "ColorParameter"
default_value_enabled = true
default_value = Color(0.362552, 0.674085, 0.54753, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_6nsmi"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_68r3f"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 0.74, 2, 0.0, 3, Vector3(10, 10, 10), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_h44g6"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_sdfet"]
function = 0

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_hilrq"]
default_input_values = [0, 0.0, 1, 3.66, 2, 0.0]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_1y4jk"]
default_input_values = [0, 0.0, 1, 0.9, 2, 1.0]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2reqf"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vh4m4"]
expanded_output_ports = [0]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_pk8cj"]
constant = 10.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_front, diffuse_lambert, specular_schlick_ggx;

uniform vec4 ColorParameter : source_color = vec4(0.362552, 0.674085, 0.547530, 1.000000);



void vertex() {
// Input:6
	vec3 n_out6p0 = VERTEX;


// Input:2
	float n_out2p0 = TIME;


// MultiplyAdd:4
	float n_in4p1 = 3.66000;
	float n_in4p2 = 0.00000;
	float n_out4p0 = fma(n_out2p0, n_in4p1, n_in4p2);


// FloatFunc:3
	float n_out3p0 = sin(n_out4p0);


// Clamp:5
	float n_in5p1 = 0.90000;
	float n_in5p2 = 1.00000;
	float n_out5p0 = clamp(n_out3p0, n_in5p1, n_in5p2);


// VectorOp:7
	vec3 n_out7p0 = n_out6p0 * vec3(n_out5p0);


// Output:0
	VERTEX = n_out7p0;


}

void fragment() {
// ColorParameter:6
	vec4 n_out6p0 = ColorParameter;


// Input:2
	float n_out2p0 = TIME;


// MultiplyAdd:4
	float n_in4p1 = 0.50000;
	float n_in4p2 = 0.00000;
	float n_out4p0 = fma(n_out2p0, n_in4p1, n_in4p2);


// FloatFunc:3
	float n_out3p0 = sin(n_out4p0);


// ColorOp:5
	vec3 n_out5p0 = abs(vec3(n_out6p0.xyz) - vec3(n_out3p0));


// Input:8
	vec3 n_out8p0 = VERTEX;


// VectorDecompose:15
	float n_out15p0 = vec4(n_out8p0, 0.0).x;
	float n_out15p1 = vec4(n_out8p0, 0.0).y;
	float n_out15p2 = vec4(n_out8p0, 0.0).z;
	float n_out15p3 = vec4(n_out8p0, 0.0).w;


// FloatOp:11
	float n_in11p0 = 0.20000;
	float n_in11p1 = 0.00000;
	float n_out11p0 = n_in11p0 + n_in11p1;


// FloatOp:12
	float n_in12p0 = 0.80000;
	float n_in12p1 = 0.00000;
	float n_out12p0 = n_in12p0 + n_in12p1;


	vec3 n_out9p0;
// If:9
	float n_in9p1 = 0.74000;
	float n_in9p2 = 0.00000;
	vec3 n_in9p3 = vec3(10.00000, 10.00000, 10.00000);
	if(abs(n_out15p0 - n_in9p1) < n_in9p2)
	{
		n_out9p0 = n_in9p3;
	}
	else if(n_out15p0 < n_in9p1)
	{
		n_out9p0 = vec3(n_out12p0);
	}
	else
	{
		n_out9p0 = vec3(n_out11p0);
	}


// Output:0
	ALBEDO = n_out5p0;
	ALPHA = n_out9p0.x;


}
"
graph_offset = Vector2(-396.153, 935.223)
modes/cull = 1
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_h44g6")
nodes/vertex/2/position = Vector2(-760, 160)
nodes/vertex/3/node = SubResource("VisualShaderNodeFloatFunc_sdfet")
nodes/vertex/3/position = Vector2(-300, 140)
nodes/vertex/4/node = SubResource("VisualShaderNodeMultiplyAdd_hilrq")
nodes/vertex/4/position = Vector2(-460, 140)
nodes/vertex/5/node = SubResource("VisualShaderNodeClamp_1y4jk")
nodes/vertex/5/position = Vector2(0, 140)
nodes/vertex/6/node = SubResource("VisualShaderNodeInput_2reqf")
nodes/vertex/6/position = Vector2(-200, 20)
nodes/vertex/7/node = SubResource("VisualShaderNodeVectorOp_vh4m4")
nodes/vertex/7/position = Vector2(200, 0)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatConstant_pk8cj")
nodes/vertex/8/position = Vector2(86.3896, 396.945)
nodes/vertex/connections = PackedInt32Array(2, 0, 4, 0, 4, 0, 3, 0, 7, 0, 0, 0, 6, 0, 7, 0, 5, 0, 7, 1, 3, 0, 5, 0)
nodes/fragment/0/position = Vector2(880, 220)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_2f48n")
nodes/fragment/2/position = Vector2(-240, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatFunc_638oe")
nodes/fragment/3/position = Vector2(360, 240)
nodes/fragment/4/node = SubResource("VisualShaderNodeMultiplyAdd_uip7v")
nodes/fragment/4/position = Vector2(120, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorOp_ntnau")
nodes/fragment/5/position = Vector2(620, 200)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorParameter_1eas0")
nodes/fragment/6/position = Vector2(-220, 400)
nodes/fragment/8/node = SubResource("VisualShaderNodeInput_6nsmi")
nodes/fragment/8/position = Vector2(-40, 1040)
nodes/fragment/9/node = SubResource("VisualShaderNodeIf_68r3f")
nodes/fragment/9/position = Vector2(360, 1200)
nodes/fragment/10/node = SubResource("VisualShaderNodeExpression_bxglj")
nodes/fragment/10/position = Vector2(-660, 1160)
nodes/fragment/10/size = Vector2(680, 400)
nodes/fragment/10/input_ports = ""
nodes/fragment/10/output_ports = "0,5,wrld_vertex;"
nodes/fragment/10/expression = "wrld_vertex = MODEL_MATRIX * vec4(VERTEX, 1.0);"
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatOp_87a1n")
nodes/fragment/11/position = Vector2(-120, 940)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatOp_8kc18")
nodes/fragment/12/position = Vector2(-120, 1660)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorDecompose_2ggu8")
nodes/fragment/15/position = Vector2(80, 1160)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatConstant_j5dqo")
nodes/fragment/16/position = Vector2(458.371, 625.267)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 4, 0, 3, 0, 6, 0, 5, 0, 3, 0, 5, 1, 11, 0, 9, 4, 12, 0, 9, 5, 5, 0, 0, 0, 15, 0, 9, 0, 9, 0, 0, 1, 8, 0, 15, 0)
